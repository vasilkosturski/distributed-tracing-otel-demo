version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"

  kafka:
    image: bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=false
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  jaeger:
    image: jaegertracing/all-in-one:1.41
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "6831:6831/udp"

  shipping-service:
    container_name: shipping-service
    build:
      context: ./services/shipping-service
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "40000:40000"
    volumes:
      - shared-volume:/app

  otel-go-agent:
    image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
    privileged: true
    pid: "container:shipping-service"
    depends_on:
      - shipping-service
    restart: on-failure
    volumes:
      - shared-volume:/app
      - /proc:/host/proc
    environment:
      OTEL_SERVICE_NAME: shipping-service
      OTEL_GO_AUTO_TARGET_EXE: /app/shippingservice
      OTEL_EXPORTER_OTLP_ENDPOINT: http://grafana-alloy:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc

  grafana-alloy:
    image: grafana/alloy:latest
    command:
      [
        "run",
        "--server.http.listen-addr=0.0.0.0:12345",
        "--storage.path=/var/lib/alloy/data",
        "/etc/alloy/config.alloy"
      ]
    volumes:
      - ./alloy.config.hcl:/etc/alloy/config.alloy
    ports:
      - "12345:12345"
    restart: unless-stopped

volumes:
  shared-volume:
