version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres-mcp:
    image: crystaldba/postgres-mcp
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URI=postgresql://postgres:password@postgres:5432/orders_db
    command: ["--access-mode=unrestricted", "--transport=sse"]
    depends_on:
      - postgres
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.4
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    restart: unless-stopped

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/orders_db
      - KAFKA_BROKER=kafka:9093
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - ./services/order-service/.env
    depends_on:
      - postgres
      - kafka
    restart: unless-stopped
    command: sh -c "sleep 15 && java -javaagent:opentelemetry-javaagent.jar -jar app.jar"

  inventory-service:
    build:
      context: ./services/inventory-service
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER=kafka:9093
    env_file:
      - ./services/inventory-service/.env
    depends_on:
      - kafka
    restart: unless-stopped
    command: sh -c "sleep 20 && ./inventory-service"

volumes:
  postgres_data:
